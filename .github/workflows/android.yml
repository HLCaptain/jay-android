name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: |
            ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: |
            ${{ runner.os }}-sonar

    - name: Caching via actions/cache@v3.0.2
      uses: actions/cache@v3.0.2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Create blank local.properties file
      run: touch local.properties

    - name: Put Google Maps Api Key into local.properties
      run: echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

    - name: Create blank google-services.json
      run: cat app/google-services.json | base64

    - name: Put data into google-services.json file
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: echo $DATA > app/google-services.json

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build and Run Unit tests
      run: bash ./gradlew test

    - name: Build and analyze via SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build sonarqube --info
