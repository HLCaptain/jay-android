/*
 * Copyright (c) 2022-2023 Balázs Püspök-Kiss (Illyan)
 *
 * Jay is a driver behaviour analytics app.
 *
 * This file is part of Jay.
 *
 * Jay is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later version.
 * Jay is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Jay.
 * If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp' version '1.8.0-1.0.9' // Depends on your kotlin version
    id 'de.mannodermaus.android-junit5'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33

    namespace 'illyan.jay'

    defaultConfig {
        applicationId "illyan.jay"
        minSdk 21
        targetSdk 33
        versionCode 3
        versionName "0.2.0-alpha"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField 'String', "MapboxAccessToken", "\"$MAPBOX_ACCESS_TOKEN\""
            buildConfigField 'String', "MapboxDownloadsToken", "\"$MAPBOX_DOWNLOADS_TOKEN\""
            buildConfigField 'String', "MapboxSdkRegistryToken", "\"$SDK_REGISTRY_TOKEN\""
        }
        release {
            initWith debug
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            initWith release
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
    lint {
        // If set to true (default), stops the build if errors are found.
        // This is needed because CICD pipeline will flop without it.
        abortOnError false
    }
}

dependencies {
    // Core
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.collection:collection-ktx:1.2.0" // The Collection extensions contain utility functions for working with Android's memory-efficient collection libraries, including ArrayMap, LongSparseArray, LruCache, and others.
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation "com.google.android.material:material:1.8.0"
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])

    // Compose
    def activity_version = '1.7.0-beta02'
    def lifecycle_version = '2.6.0-rc01'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha07'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.activity:activity-compose:$activity_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.compose.foundation:foundation:$compose_version"

    // Baseline Profiles and benchmarking
    implementation 'androidx.profileinstaller:profileinstaller:1.3.0-beta01'

    // Scrollbar
    implementation 'com.github.HLCaptain:compose-scrollbar:0.0.3-alpha'

    // TODO: implement some way to use bio auth
    // Biometric Auth
    //implementation "androidx.biometric:biometric:1.2.0-alpha05"

    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    // Layouts
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Item Swipe
    implementation "me.saket.swipe:swipe:1.1.1"

    // Mapbox
    implementation "com.mapbox.maps:android:10.11.0-beta.1"
    implementation "com.mapbox.search:mapbox-search-android-ui:1.0.0-beta.44"
    implementation "com.mapbox.navigation:android:2.11.0-beta.1"

    // Accompanist
    def accompanist_version = '0.29.1-alpha'
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompanist_version"

    // Hilt
    def hilt_version = '2.44.2'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Navigation
    def compose_nav_version = '1.8.33-beta'
    implementation "io.github.raamcosta.compose-destinations:animations-core:$compose_nav_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_nav_version"

    // Coil
    implementation "io.coil-kt:coil-compose:2.2.2"

    // Room
    def room_version = '2.5.0'
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version" // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava3:$room_version" // optional - RxJava3 support for Room
    implementation "androidx.room:room-guava:$room_version" // optional - Guava support for Room, including Optional and ListenableFuture
    testImplementation "androidx.room:room-testing:$room_version" // optional - Test helpers
    implementation "androidx.room:room-paging:$room_version" // optional - Paging 3 Integration

    // Serialization
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.5.0'

    // Compression
    implementation 'com.github.luben:zstd-jni:1.5.4-1@aar'
    testImplementation "com.github.luben:zstd-jni:1.5.4-1"

    // Coroutine
    def coroutines_version = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Google services
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.maps.android:android-maps-utils:2.4.0'
    implementation 'com.google.maps.android:maps-utils-ktx:3.4.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.3')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    // JUnit5 testing tools
    def junit_version = '5.9.1'
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit_version"

    // MockK test tool
    def mockk_version = '1.13.2'
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // Other testing tools
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}